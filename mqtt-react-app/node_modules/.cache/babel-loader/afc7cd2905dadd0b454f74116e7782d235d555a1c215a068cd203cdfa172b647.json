{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pedro\\\\Desktop\\\\xola\\\\Tecnologias de Interface\\\\Projeto Final\\\\Website\\\\teste2\\\\mqtt-react-app\\\\src\\\\MqttComponent.js\",\n  _s = $RefreshSig$();\n// src/MqttComponent.js\nimport React, { useEffect, useState } from 'react';\nimport client from './mqttService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MqttComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  /*  const [inputValue, setInputValue] = useState(''); */\n  const topic = \"contentor/lotacao\";\n  useEffect(() => {\n    const handleMessage = (topic, message) => {\n      const payload = message.toString();\n      setMessages(prevMessages => [...prevMessages, {\n        topic,\n        payload\n      }]);\n      console.log(`Message received: ${topic} - ${payload}`);\n    };\n    client.on('message', handleMessage);\n\n    // Subscribe to a topic\n    client.subscribe(topic, {\n      qos: 0\n    }, error => {\n      if (error) {\n        console.error('Subscribe error:', error);\n      } else {\n        console.log('Subscribed to topic:' + topic);\n      }\n    });\n\n    // Cleanup on unmount\n    return () => {\n      client.off('message', handleMessage);\n      client.unsubscribe(topic);\n    };\n  }, []);\n\n  /*const handlePublish = () => {\r\n      if (inputValue) {\r\n          client.publish(topic, inputValue, (err) => {\r\n              if (err) {\r\n                  console.error('Publish error:', err);\r\n              } else {\r\n                  console.log('Message published');\r\n              }\r\n          });\r\n          setInputValue('');\r\n      }\r\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MQTT Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.topic, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), \" \", msg.payload]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(MqttComponent, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = MqttComponent;\nexport default MqttComponent;\nvar _c;\n$RefreshReg$(_c, \"MqttComponent\");","map":{"version":3,"names":["React","useEffect","useState","client","jsxDEV","_jsxDEV","MqttComponent","_s","messages","setMessages","topic","handleMessage","message","payload","toString","prevMessages","console","log","on","subscribe","qos","error","off","unsubscribe","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/pedro/Desktop/xola/Tecnologias de Interface/Projeto Final/Website/teste2/mqtt-react-app/src/MqttComponent.js"],"sourcesContent":["// src/MqttComponent.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport client from './mqttService';\r\n\r\nconst MqttComponent = () => {\r\n    const [messages, setMessages] = useState([]);\r\n   /*  const [inputValue, setInputValue] = useState(''); */\r\n    const topic = \"contentor/lotacao\";\r\n\r\n    useEffect(() => {\r\n        const handleMessage = (topic, message) => {\r\n            const payload = message.toString();\r\n            setMessages((prevMessages) => [...prevMessages, { topic, payload }]);\r\n            console.log(`Message received: ${topic} - ${payload}`);\r\n        };\r\n\r\n        client.on('message', handleMessage);\r\n\r\n        // Subscribe to a topic\r\n        client.subscribe(topic, { qos: 0 }, (error) => {\r\n            if (error) {\r\n                console.error('Subscribe error:', error);\r\n            } else {\r\n                console.log('Subscribed to topic:' + topic);\r\n            }\r\n        });\r\n\r\n        // Cleanup on unmount\r\n        return () => {\r\n            client.off('message', handleMessage);\r\n            client.unsubscribe(topic);\r\n        };\r\n    }, []);\r\n\r\n    /*const handlePublish = () => {\r\n        if (inputValue) {\r\n            client.publish(topic, inputValue, (err) => {\r\n                if (err) {\r\n                    console.error('Publish error:', err);\r\n                } else {\r\n                    console.log('Message published');\r\n                }\r\n            });\r\n            setInputValue('');\r\n        }\r\n    };*/\r\n\r\n    return (\r\n        <div>\r\n            <h2>MQTT Messages</h2>\r\n            <ul>\r\n                {messages.map((msg, index) => (\r\n                    <li key={index}>\r\n                        <strong>{msg.topic}:</strong> {msg.payload}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {/* <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n            />\r\n            <button onClick={handlePublish}>Publish</button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MqttComponent;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC7C;EACC,MAAMQ,KAAK,GAAG,mBAAmB;EAEjCT,SAAS,CAAC,MAAM;IACZ,MAAMU,aAAa,GAAGA,CAACD,KAAK,EAAEE,OAAO,KAAK;MACtC,MAAMC,OAAO,GAAGD,OAAO,CAACE,QAAQ,CAAC,CAAC;MAClCL,WAAW,CAAEM,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEL,KAAK;QAAEG;MAAQ,CAAC,CAAC,CAAC;MACpEG,OAAO,CAACC,GAAG,CAAE,qBAAoBP,KAAM,MAAKG,OAAQ,EAAC,CAAC;IAC1D,CAAC;IAEDV,MAAM,CAACe,EAAE,CAAC,SAAS,EAAEP,aAAa,CAAC;;IAEnC;IACAR,MAAM,CAACgB,SAAS,CAACT,KAAK,EAAE;MAAEU,GAAG,EAAE;IAAE,CAAC,EAAGC,KAAK,IAAK;MAC3C,IAAIA,KAAK,EAAE;QACPL,OAAO,CAACK,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC5C,CAAC,MAAM;QACHL,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGP,KAAK,CAAC;MAC/C;IACJ,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACTP,MAAM,CAACmB,GAAG,CAAC,SAAS,EAAEX,aAAa,CAAC;MACpCR,MAAM,CAACoB,WAAW,CAACb,KAAK,CAAC;IAC7B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACIL,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBvB,OAAA;MAAAmB,QAAA,EACKhB,QAAQ,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrB1B,OAAA;QAAAmB,QAAA,gBACInB,OAAA;UAAAmB,QAAA,GAASM,GAAG,CAACpB,KAAK,EAAC,GAAC;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,GAAG,CAACjB,OAAO;MAAA,GADrCkB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOJ,CAAC;AAEd,CAAC;AAACrB,EAAA,CA7DID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA+DnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}