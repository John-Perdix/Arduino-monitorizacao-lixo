{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pedro\\\\Desktop\\\\xola\\\\Tecnologias de Interface\\\\Projeto Final\\\\Website\\\\teste2\\\\mqtt-react-app\\\\src\\\\MqttComponent.js\",\n  _s = $RefreshSig$();\n// src/MqttComponent.js\nimport React, { useEffect, useState } from 'react';\nimport client from './mqttService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MqttComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const topic = \"contentor/lotacao\";\n  useEffect(() => {\n    const handleMessage = (topic, message) => {\n      const payload = message.toString();\n      setMessages(prevMessages => [...prevMessages, {\n        topic,\n        payload\n      }]);\n    };\n    client.on('message', handleMessage);\n\n    // Subscribe to a topic\n    client.subscribe(topic, {\n      qos: 0\n    }, error => {\n      if (error) {\n        console.error('Subscribe error:', error);\n      } else {\n        console.log('Subscribed to topic:' + topic);\n      }\n    });\n\n    // Cleanup on unmount\n    return () => {\n      client.off('message', handleMessage);\n      client.unsubscribe(topic);\n    };\n  }, []);\n  const handlePublish = () => {\n    if (inputValue) {\n      client.publish(topic, inputValue);\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MQTT Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.topic, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), \" \", msg.payload]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePublish,\n      children: \"Publish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(MqttComponent, \"GG/YeSFNrWOWKG591Wbb47E4YjM=\");\n_c = MqttComponent;\nexport default MqttComponent;\nvar _c;\n$RefreshReg$(_c, \"MqttComponent\");","map":{"version":3,"names":["React","useEffect","useState","client","jsxDEV","_jsxDEV","MqttComponent","_s","messages","setMessages","inputValue","setInputValue","topic","handleMessage","message","payload","toString","prevMessages","on","subscribe","qos","error","console","log","off","unsubscribe","handlePublish","publish","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pedro/Desktop/xola/Tecnologias de Interface/Projeto Final/Website/teste2/mqtt-react-app/src/MqttComponent.js"],"sourcesContent":["// src/MqttComponent.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport client from './mqttService';\r\n\r\nconst MqttComponent = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const topic = \"contentor/lotacao\";\r\n\r\n    useEffect(() => {\r\n        const handleMessage = (topic, message) => {\r\n            const payload = message.toString();\r\n            setMessages((prevMessages) => [...prevMessages, { topic, payload }]);\r\n        };\r\n\r\n        client.on('message', handleMessage);\r\n\r\n        // Subscribe to a topic\r\n        client.subscribe(topic, { qos: 0 }, (error) => {\r\n            if (error) {\r\n                console.error('Subscribe error:', error);\r\n            } else {\r\n                console.log('Subscribed to topic:' + topic);\r\n            }\r\n        });\r\n\r\n        // Cleanup on unmount\r\n        return () => {\r\n            client.off('message', handleMessage);\r\n            client.unsubscribe(topic);\r\n        };\r\n    }, []);\r\n\r\n    const handlePublish = () => {\r\n        if (inputValue) {\r\n            client.publish(topic, inputValue);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>MQTT Messages</h2>\r\n            <ul>\r\n                {messages.map((msg, index) => (\r\n                    <li key={index}>\r\n                        <strong>{msg.topic}:</strong> {msg.payload}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n            />\r\n            <button onClick={handlePublish}>Publish</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MqttComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}